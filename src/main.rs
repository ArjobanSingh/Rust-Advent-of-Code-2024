use challenge_1::get_distance_bw_lists;
use challenge_10::topographic_map_search;
use challenge_11::stone_count;
use challenge_12::garden_groups;
use challenge_13::min_tokens;
use challenge_14::restroom_redoubt;
use challenge_15::warehouse_woes;
use challenge_2::get_safe_reports_count;
use challenge_3::get_uncorrupted_mul_ans;
// use challenge_4::search_for_xmas;
use challenge_5::correct_page_order_sum as correct_page_order_sum_puz_1;
use challenge_6::get_guard_distinct_pos_size;
use challenge_7::bridge_repair_puz;
use challenge_8::resonant_collinearity;
use challenge_9::disk_fragmenter;

mod challenge_1;
mod challenge_10;
mod challenge_11;
mod challenge_12;
mod challenge_13;
mod challenge_14;
mod challenge_15;
mod challenge_2;
mod challenge_3;
mod challenge_4;
mod challenge_5;
mod challenge_6;
mod challenge_7;
mod challenge_8;
mod challenge_9;

fn main() {
    // get_distance_bw_lists("src/inputs/challenge_1.txt");
    // get_safe_reports_count("src/inputs/challenge_2.txt");
    // get_uncorrupted_mul_ans("src/inputs/challenge_3.txt");
    // search_for_xmas("src/inputs/challenge_4.txt");
    // correct_page_order_sum_puz_1("src/inputs/challenge_5.txt");
    // correct_page_order_sum("src/inputs/challenge_5.txt");
    // get_guard_distinct_pos_size("src/inputs/challenge_6.txt");
    // bridge_repair_puz("src/inputs/challenge_7.txt");
    // resonant_collinearity("src/inputs/challenge_8.txt");
    // disk_fragmenter("src/inputs/challenge_9.txt");
    // topographic_map_search("src/inputs/challenge_10.txt");
    // stone_count("src/inputs/challenge_11.txt");
    // garden_groups("src/inputs/challenge_12.txt");
    // min_tokens("src/inputs/challenge_13.txt");
    // restroom_redoubt("src/inputs/challenge_14.txt");
    warehouse_woes("src/inputs/challenge_15.txt");
}
